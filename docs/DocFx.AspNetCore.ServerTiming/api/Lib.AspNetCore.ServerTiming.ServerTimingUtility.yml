### YamlMime:ManagedReference
items:
- uid: Lib.AspNetCore.ServerTiming.ServerTimingUtility
  commentId: T:Lib.AspNetCore.ServerTiming.ServerTimingUtility
  id: ServerTimingUtility
  parent: Lib.AspNetCore.ServerTiming
  children:
  - Lib.AspNetCore.ServerTiming.ServerTimingUtility.AddMetric(Lib.AspNetCore.ServerTiming.IServerTiming,System.Decimal,System.String,System.String,System.String,System.Int32)
  - Lib.AspNetCore.ServerTiming.ServerTimingUtility.AddMetric(Lib.AspNetCore.ServerTiming.IServerTiming,System.String,System.String,System.String,System.String,System.Int32)
  - Lib.AspNetCore.ServerTiming.ServerTimingUtility.TimeAction(Lib.AspNetCore.ServerTiming.IServerTiming,System.String,System.String,System.String,System.Int32)
  - Lib.AspNetCore.ServerTiming.ServerTimingUtility.TimeTask(Lib.AspNetCore.ServerTiming.IServerTiming,Task,System.String,System.String,System.String,System.Int32)
  - Lib.AspNetCore.ServerTiming.ServerTimingUtility.TimeTask``1(Lib.AspNetCore.ServerTiming.IServerTiming,Task{``0},System.String,System.String,System.String,System.Int32)
  langs:
  - csharp
  - vb
  name: ServerTimingUtility
  nameWithType: ServerTimingUtility
  fullName: Lib.AspNetCore.ServerTiming.ServerTimingUtility
  type: Class
  source:
    remote:
      path: Lib.AspNetCore.ServerTiming/ServerTimingUtility.cs
      branch: main
      repo: https://github.com/tpeczek/Lib.AspNetCore.ServerTiming.git
    id: ServerTimingUtility
    path: ../Lib.AspNetCore.ServerTiming/ServerTimingUtility.cs
    startLine: 12
  assemblies:
  - Lib.AspNetCore.ServerTiming
  namespace: Lib.AspNetCore.ServerTiming
  summary: "\nUtilities for easier logging of server timing performance metric.\n"
  example: []
  syntax:
    content: 'public static class ServerTimingUtility : object'
    content.vb: >-
      Public Module ServerTimingUtility
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Lib.AspNetCore.ServerTiming.ServerTimingUtility.TimeAction(Lib.AspNetCore.ServerTiming.IServerTiming,System.String,System.String,System.String,System.Int32)
  commentId: M:Lib.AspNetCore.ServerTiming.ServerTimingUtility.TimeAction(Lib.AspNetCore.ServerTiming.IServerTiming,System.String,System.String,System.String,System.Int32)
  id: TimeAction(Lib.AspNetCore.ServerTiming.IServerTiming,System.String,System.String,System.String,System.Int32)
  isExtensionMethod: true
  parent: Lib.AspNetCore.ServerTiming.ServerTimingUtility
  langs:
  - csharp
  - vb
  name: TimeAction(IServerTiming, String, String, String, Int32)
  nameWithType: ServerTimingUtility.TimeAction(IServerTiming, String, String, String, Int32)
  fullName: Lib.AspNetCore.ServerTiming.ServerTimingUtility.TimeAction(Lib.AspNetCore.ServerTiming.IServerTiming, System.String, System.String, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Lib.AspNetCore.ServerTiming/ServerTimingUtility.cs
      branch: main
      repo: https://github.com/tpeczek/Lib.AspNetCore.ServerTiming.git
    id: TimeAction
    path: ../Lib.AspNetCore.ServerTiming/ServerTimingUtility.cs
    startLine: 22
  assemblies:
  - Lib.AspNetCore.ServerTiming
  namespace: Lib.AspNetCore.ServerTiming
  summary: "\nTime a block of code.\n"
  example: []
  syntax:
    content: public static IDisposable TimeAction(this IServerTiming serverTiming, string metricName = null, string functionName = null, string filePath = null, int lineNumber = 0)
    parameters:
    - id: serverTiming
      type: Lib.AspNetCore.ServerTiming.IServerTiming
      description: The <xref href="Lib.AspNetCore.ServerTiming.IServerTiming" data-throw-if-not-resolved="false"></xref> to add metric to.
    - id: metricName
      type: System.String
      description: Optional, metric name, if passed will override any caller name.
    - id: functionName
      type: System.String
      description: Optional, populated compile-time with the name of the calling function.
    - id: filePath
      type: System.String
      description: Optional, populated compile-time with the path to the calling file.
    - id: lineNumber
      type: System.Int32
      description: Optional, populated compile-time with line number in the calling file.
    return:
      type: IDisposable
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TimeAction(serverTiming As IServerTiming, metricName As String = Nothing, functionName As String = Nothing, filePath As String = Nothing, lineNumber As Integer = 0) As IDisposable
  overload: Lib.AspNetCore.ServerTiming.ServerTimingUtility.TimeAction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Lib.AspNetCore.ServerTiming.ServerTimingUtility.TimeTask(Lib.AspNetCore.ServerTiming.IServerTiming,Task,System.String,System.String,System.String,System.Int32)
  commentId: M:Lib.AspNetCore.ServerTiming.ServerTimingUtility.TimeTask(Lib.AspNetCore.ServerTiming.IServerTiming,Task,System.String,System.String,System.String,System.Int32)
  id: TimeTask(Lib.AspNetCore.ServerTiming.IServerTiming,Task,System.String,System.String,System.String,System.Int32)
  isExtensionMethod: true
  parent: Lib.AspNetCore.ServerTiming.ServerTimingUtility
  langs:
  - csharp
  - vb
  name: TimeTask(IServerTiming, Task, String, String, String, Int32)
  nameWithType: ServerTimingUtility.TimeTask(IServerTiming, Task, String, String, String, Int32)
  fullName: Lib.AspNetCore.ServerTiming.ServerTimingUtility.TimeTask(Lib.AspNetCore.ServerTiming.IServerTiming, Task, System.String, System.String, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Lib.AspNetCore.ServerTiming/ServerTimingUtility.cs
      branch: main
      repo: https://github.com/tpeczek/Lib.AspNetCore.ServerTiming.git
    id: TimeTask
    path: ../Lib.AspNetCore.ServerTiming/ServerTimingUtility.cs
    startLine: 48
  assemblies:
  - Lib.AspNetCore.ServerTiming
  namespace: Lib.AspNetCore.ServerTiming
  summary: "\nTime an async task.\n"
  example: []
  syntax:
    content: public static async Task TimeTask(this IServerTiming serverTiming, Task task, string metricName = null, string functionName = null, string filePath = null, int lineNumber = 0)
    parameters:
    - id: serverTiming
      type: Lib.AspNetCore.ServerTiming.IServerTiming
      description: The <xref href="Lib.AspNetCore.ServerTiming.IServerTiming" data-throw-if-not-resolved="false"></xref> to add metric to.
    - id: task
      type: Task
      description: The <see cref="!:Task"></see> to time.
    - id: metricName
      type: System.String
      description: Optional, metric name, if passed will override any caller name.
    - id: functionName
      type: System.String
      description: Optional, populated compile-time with the name of the calling function.
    - id: filePath
      type: System.String
      description: Optional, populated compile-time with the path to the calling file.
    - id: lineNumber
      type: System.Int32
      description: Optional, populated compile-time with line number in the calling file.
    return:
      type: Task
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TimeTask(serverTiming As IServerTiming, task As Task, metricName As String = Nothing, functionName As String = Nothing, filePath As String = Nothing, lineNumber As Integer = 0) As Task
  overload: Lib.AspNetCore.ServerTiming.ServerTimingUtility.TimeTask*
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
- uid: Lib.AspNetCore.ServerTiming.ServerTimingUtility.TimeTask``1(Lib.AspNetCore.ServerTiming.IServerTiming,Task{``0},System.String,System.String,System.String,System.Int32)
  commentId: M:Lib.AspNetCore.ServerTiming.ServerTimingUtility.TimeTask``1(Lib.AspNetCore.ServerTiming.IServerTiming,Task{``0},System.String,System.String,System.String,System.Int32)
  id: TimeTask``1(Lib.AspNetCore.ServerTiming.IServerTiming,Task{``0},System.String,System.String,System.String,System.Int32)
  isExtensionMethod: true
  parent: Lib.AspNetCore.ServerTiming.ServerTimingUtility
  langs:
  - csharp
  - vb
  name: TimeTask<T>(IServerTiming, Task<T>, String, String, String, Int32)
  nameWithType: ServerTimingUtility.TimeTask<T>(IServerTiming, Task<T>, String, String, String, Int32)
  fullName: Lib.AspNetCore.ServerTiming.ServerTimingUtility.TimeTask<T>(Lib.AspNetCore.ServerTiming.IServerTiming, Task<T>, System.String, System.String, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Lib.AspNetCore.ServerTiming/ServerTimingUtility.cs
      branch: main
      repo: https://github.com/tpeczek/Lib.AspNetCore.ServerTiming.git
    id: TimeTask
    path: ../Lib.AspNetCore.ServerTiming/ServerTimingUtility.cs
    startLine: 72
  assemblies:
  - Lib.AspNetCore.ServerTiming
  namespace: Lib.AspNetCore.ServerTiming
  summary: "\nTime an async task.\n"
  example: []
  syntax:
    content: public static async Task<T> TimeTask<T>(this IServerTiming serverTiming, Task<T> task, string metricName = null, string functionName = null, string filePath = null, int lineNumber = 0)
    parameters:
    - id: serverTiming
      type: Lib.AspNetCore.ServerTiming.IServerTiming
      description: The <xref href="Lib.AspNetCore.ServerTiming.IServerTiming" data-throw-if-not-resolved="false"></xref> to add metric to.
    - id: task
      type: Task{{T}}
      description: The <see cref="!:Task"></see> to time.
    - id: metricName
      type: System.String
      description: Optional, metric name, if passed will override any caller name.
    - id: functionName
      type: System.String
      description: Optional, populated compile-time with the name of the calling function.
    - id: filePath
      type: System.String
      description: Optional, populated compile-time with the path to the calling file.
    - id: lineNumber
      type: System.Int32
      description: Optional, populated compile-time with line number in the calling file.
    typeParameters:
    - id: T
      description: Type of the task.
    return:
      type: Task{{T}}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TimeTask(Of T)(serverTiming As IServerTiming, task As Task(Of T), metricName As String = Nothing, functionName As String = Nothing, filePath As String = Nothing, lineNumber As Integer = 0) As Task(Of T)
  overload: Lib.AspNetCore.ServerTiming.ServerTimingUtility.TimeTask*
  nameWithType.vb: ServerTimingUtility.TimeTask(Of T)(IServerTiming, Task(Of T), String, String, String, Int32)
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Lib.AspNetCore.ServerTiming.ServerTimingUtility.TimeTask(Of T)(Lib.AspNetCore.ServerTiming.IServerTiming, Task(Of T), System.String, System.String, System.String, System.Int32)
  name.vb: TimeTask(Of T)(IServerTiming, Task(Of T), String, String, String, Int32)
- uid: Lib.AspNetCore.ServerTiming.ServerTimingUtility.AddMetric(Lib.AspNetCore.ServerTiming.IServerTiming,System.Decimal,System.String,System.String,System.String,System.Int32)
  commentId: M:Lib.AspNetCore.ServerTiming.ServerTimingUtility.AddMetric(Lib.AspNetCore.ServerTiming.IServerTiming,System.Decimal,System.String,System.String,System.String,System.Int32)
  id: AddMetric(Lib.AspNetCore.ServerTiming.IServerTiming,System.Decimal,System.String,System.String,System.String,System.Int32)
  isExtensionMethod: true
  parent: Lib.AspNetCore.ServerTiming.ServerTimingUtility
  langs:
  - csharp
  - vb
  name: AddMetric(IServerTiming, Decimal, String, String, String, Int32)
  nameWithType: ServerTimingUtility.AddMetric(IServerTiming, Decimal, String, String, String, Int32)
  fullName: Lib.AspNetCore.ServerTiming.ServerTimingUtility.AddMetric(Lib.AspNetCore.ServerTiming.IServerTiming, System.Decimal, System.String, System.String, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Lib.AspNetCore.ServerTiming/ServerTimingUtility.cs
      branch: main
      repo: https://github.com/tpeczek/Lib.AspNetCore.ServerTiming.git
    id: AddMetric
    path: ../Lib.AspNetCore.ServerTiming/ServerTimingUtility.cs
    startLine: 94
  assemblies:
  - Lib.AspNetCore.ServerTiming
  namespace: Lib.AspNetCore.ServerTiming
  summary: "\nAdd a timed metric to the timing, if present.\n"
  example: []
  syntax:
    content: public static void AddMetric(this IServerTiming serverTiming, decimal duration, string metricName = null, string functionName = null, string filePath = null, int lineNumber = 0)
    parameters:
    - id: serverTiming
      type: Lib.AspNetCore.ServerTiming.IServerTiming
      description: The <xref href="Lib.AspNetCore.ServerTiming.IServerTiming" data-throw-if-not-resolved="false"></xref> to add metric to.
    - id: duration
      type: System.Decimal
      description: The duration to log in ms.
    - id: metricName
      type: System.String
      description: The name of the metric to log.
    - id: functionName
      type: System.String
      description: Optional, populated compile-time with the name of the calling function
    - id: filePath
      type: System.String
      description: Optional, populated compile-time with the path to the calling file
    - id: lineNumber
      type: System.Int32
      description: Optional, populated compile-time with line number in the calling file
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub AddMetric(serverTiming As IServerTiming, duration As Decimal, metricName As String = Nothing, functionName As String = Nothing, filePath As String = Nothing, lineNumber As Integer = 0)
  overload: Lib.AspNetCore.ServerTiming.ServerTimingUtility.AddMetric*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Lib.AspNetCore.ServerTiming.ServerTimingUtility.AddMetric(Lib.AspNetCore.ServerTiming.IServerTiming,System.String,System.String,System.String,System.String,System.Int32)
  commentId: M:Lib.AspNetCore.ServerTiming.ServerTimingUtility.AddMetric(Lib.AspNetCore.ServerTiming.IServerTiming,System.String,System.String,System.String,System.String,System.Int32)
  id: AddMetric(Lib.AspNetCore.ServerTiming.IServerTiming,System.String,System.String,System.String,System.String,System.Int32)
  isExtensionMethod: true
  parent: Lib.AspNetCore.ServerTiming.ServerTimingUtility
  langs:
  - csharp
  - vb
  name: AddMetric(IServerTiming, String, String, String, String, Int32)
  nameWithType: ServerTimingUtility.AddMetric(IServerTiming, String, String, String, String, Int32)
  fullName: Lib.AspNetCore.ServerTiming.ServerTimingUtility.AddMetric(Lib.AspNetCore.ServerTiming.IServerTiming, System.String, System.String, System.String, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Lib.AspNetCore.ServerTiming/ServerTimingUtility.cs
      branch: main
      repo: https://github.com/tpeczek/Lib.AspNetCore.ServerTiming.git
    id: AddMetric
    path: ../Lib.AspNetCore.ServerTiming/ServerTimingUtility.cs
    startLine: 119
  assemblies:
  - Lib.AspNetCore.ServerTiming
  namespace: Lib.AspNetCore.ServerTiming
  summary: "\nAdd an untimed metric to the timing, if present.\n"
  example: []
  syntax:
    content: public static void AddMetric(this IServerTiming serverTiming, string metricName = null, string description = null, string functionName = null, string filePath = null, int lineNumber = 0)
    parameters:
    - id: serverTiming
      type: Lib.AspNetCore.ServerTiming.IServerTiming
      description: The <xref href="Lib.AspNetCore.ServerTiming.IServerTiming" data-throw-if-not-resolved="false"></xref> to add metric to.
    - id: metricName
      type: System.String
      description: The name of the metric to log.
    - id: description
      type: System.String
      description: The description of the metric
    - id: functionName
      type: System.String
      description: Optional, populated compile-time with the name of the calling function
    - id: filePath
      type: System.String
      description: Optional, populated compile-time with the path to the calling file
    - id: lineNumber
      type: System.Int32
      description: Optional, populated compile-time with line number in the calling file
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub AddMetric(serverTiming As IServerTiming, metricName As String = Nothing, description As String = Nothing, functionName As String = Nothing, filePath As String = Nothing, lineNumber As Integer = 0)
  overload: Lib.AspNetCore.ServerTiming.ServerTimingUtility.AddMetric*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Lib.AspNetCore.ServerTiming
  commentId: N:Lib.AspNetCore.ServerTiming
  name: Lib.AspNetCore.ServerTiming
  nameWithType: Lib.AspNetCore.ServerTiming
  fullName: Lib.AspNetCore.ServerTiming
- uid: Lib.AspNetCore.ServerTiming.IServerTiming
  commentId: T:Lib.AspNetCore.ServerTiming.IServerTiming
  parent: Lib.AspNetCore.ServerTiming
  name: IServerTiming
  nameWithType: IServerTiming
  fullName: Lib.AspNetCore.ServerTiming.IServerTiming
- uid: Lib.AspNetCore.ServerTiming.ServerTimingUtility.TimeAction*
  commentId: Overload:Lib.AspNetCore.ServerTiming.ServerTimingUtility.TimeAction
  name: TimeAction
  nameWithType: ServerTimingUtility.TimeAction
  fullName: Lib.AspNetCore.ServerTiming.ServerTimingUtility.TimeAction
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: IDisposable
  commentId: '!:IDisposable'
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: IDisposable
- uid: Lib.AspNetCore.ServerTiming.ServerTimingUtility.TimeTask*
  commentId: Overload:Lib.AspNetCore.ServerTiming.ServerTimingUtility.TimeTask
  name: TimeTask
  nameWithType: ServerTimingUtility.TimeTask
  fullName: Lib.AspNetCore.ServerTiming.ServerTimingUtility.TimeTask
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Task{{T}}
  commentId: '!:Task{``0}'
  definition: Task`1
  name: Task<T>
  nameWithType: Task<T>
  fullName: Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Lib.AspNetCore.ServerTiming.ServerTimingUtility.AddMetric*
  commentId: Overload:Lib.AspNetCore.ServerTiming.ServerTimingUtility.AddMetric
  name: AddMetric
  nameWithType: ServerTimingUtility.AddMetric
  fullName: Lib.AspNetCore.ServerTiming.ServerTimingUtility.AddMetric
- uid: System.Decimal
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
