### YamlMime:ManagedReference
items:
- uid: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions
  commentId: T:Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions
  id: ServerTimingOptionsExtensions
  parent: Lib.AspNetCore.ServerTiming
  children:
  - Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.AddCustomMetricFilter(Lib.AspNetCore.ServerTiming.ServerTimingOptions,Func{HttpContext,ICollection{Lib.AspNetCore.ServerTiming.Http.Headers.ServerTimingMetric},System.Boolean})
  - Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictDescriptionsToDevelopment(Lib.AspNetCore.ServerTiming.ServerTimingOptions,Microsoft.Extensions.Hosting.IHostEnvironment)
  - Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToDevelopment(Lib.AspNetCore.ServerTiming.ServerTimingOptions,Microsoft.Extensions.Hosting.IHostEnvironment)
  - Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToIp(Lib.AspNetCore.ServerTiming.ServerTimingOptions,IPAddress)
  - Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToIp(Lib.AspNetCore.ServerTiming.ServerTimingOptions,System.String)
  - Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToIpRange(Lib.AspNetCore.ServerTiming.ServerTimingOptions,IPAddress,IPAddress)
  - Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToIpRange(Lib.AspNetCore.ServerTiming.ServerTimingOptions,System.String,System.String)
  langs:
  - csharp
  - vb
  name: ServerTimingOptionsExtensions
  nameWithType: ServerTimingOptionsExtensions
  fullName: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions
  type: Class
  source:
    remote:
      path: Lib.AspNetCore.ServerTiming/ServerTimingOptionsExtensions.cs
      branch: main
      repo: https://github.com/tpeczek/Lib.AspNetCore.ServerTiming.git
    id: ServerTimingOptionsExtensions
    path: ../Lib.AspNetCore.ServerTiming/ServerTimingOptionsExtensions.cs
    startLine: 12
  assemblies:
  - Lib.AspNetCore.ServerTiming
  namespace: Lib.AspNetCore.ServerTiming
  summary: "\nThe <xref href=\"Lib.AspNetCore.ServerTiming.ServerTimingOptions\" data-throw-if-not-resolved=\"false\"></xref> extensions for registering <xref href=\"Lib.AspNetCore.ServerTiming.Filters.IServerTimingMetricFilter\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: 'public static class ServerTimingOptionsExtensions : object'
    content.vb: >-
      Public Module ServerTimingOptionsExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToDevelopment(Lib.AspNetCore.ServerTiming.ServerTimingOptions,Microsoft.Extensions.Hosting.IHostEnvironment)
  commentId: M:Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToDevelopment(Lib.AspNetCore.ServerTiming.ServerTimingOptions,Microsoft.Extensions.Hosting.IHostEnvironment)
  id: RestrictMetricsToDevelopment(Lib.AspNetCore.ServerTiming.ServerTimingOptions,Microsoft.Extensions.Hosting.IHostEnvironment)
  isExtensionMethod: true
  parent: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions
  langs:
  - csharp
  - vb
  name: RestrictMetricsToDevelopment(ServerTimingOptions, IHostEnvironment)
  nameWithType: ServerTimingOptionsExtensions.RestrictMetricsToDevelopment(ServerTimingOptions, IHostEnvironment)
  fullName: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToDevelopment(Lib.AspNetCore.ServerTiming.ServerTimingOptions, Microsoft.Extensions.Hosting.IHostEnvironment)
  type: Method
  source:
    remote:
      path: Lib.AspNetCore.ServerTiming/ServerTimingOptionsExtensions.cs
      branch: main
      repo: https://github.com/tpeczek/Lib.AspNetCore.ServerTiming.git
    id: RestrictMetricsToDevelopment
    path: ../Lib.AspNetCore.ServerTiming/ServerTimingOptionsExtensions.cs
    startLine: 20
  assemblies:
  - Lib.AspNetCore.ServerTiming
  namespace: Lib.AspNetCore.ServerTiming
  summary: "\nAdds <xref href=\"Lib.AspNetCore.ServerTiming.Filters.IServerTimingMetricFilter\" data-throw-if-not-resolved=\"false\"></xref> which will remove all metrics unless an application is running in development environment.\n"
  example: []
  syntax:
    content: public static void RestrictMetricsToDevelopment(this ServerTimingOptions options, IHostEnvironment hostEnvironment)
    parameters:
    - id: options
      type: Lib.AspNetCore.ServerTiming.ServerTimingOptions
      description: The <xref href="Lib.AspNetCore.ServerTiming.ServerTimingOptions" data-throw-if-not-resolved="false"></xref> to modify.
    - id: hostEnvironment
      type: Microsoft.Extensions.Hosting.IHostEnvironment
      description: The <xref href="Microsoft.Extensions.Hosting.IHostEnvironment" data-throw-if-not-resolved="false"></xref> used to determine the hosting environment an application is running in.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub RestrictMetricsToDevelopment(options As ServerTimingOptions, hostEnvironment As IHostEnvironment)
  overload: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToDevelopment*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictDescriptionsToDevelopment(Lib.AspNetCore.ServerTiming.ServerTimingOptions,Microsoft.Extensions.Hosting.IHostEnvironment)
  commentId: M:Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictDescriptionsToDevelopment(Lib.AspNetCore.ServerTiming.ServerTimingOptions,Microsoft.Extensions.Hosting.IHostEnvironment)
  id: RestrictDescriptionsToDevelopment(Lib.AspNetCore.ServerTiming.ServerTimingOptions,Microsoft.Extensions.Hosting.IHostEnvironment)
  isExtensionMethod: true
  parent: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions
  langs:
  - csharp
  - vb
  name: RestrictDescriptionsToDevelopment(ServerTimingOptions, IHostEnvironment)
  nameWithType: ServerTimingOptionsExtensions.RestrictDescriptionsToDevelopment(ServerTimingOptions, IHostEnvironment)
  fullName: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictDescriptionsToDevelopment(Lib.AspNetCore.ServerTiming.ServerTimingOptions, Microsoft.Extensions.Hosting.IHostEnvironment)
  type: Method
  source:
    remote:
      path: Lib.AspNetCore.ServerTiming/ServerTimingOptionsExtensions.cs
      branch: main
      repo: https://github.com/tpeczek/Lib.AspNetCore.ServerTiming.git
    id: RestrictDescriptionsToDevelopment
    path: ../Lib.AspNetCore.ServerTiming/ServerTimingOptionsExtensions.cs
    startLine: 30
  assemblies:
  - Lib.AspNetCore.ServerTiming
  namespace: Lib.AspNetCore.ServerTiming
  summary: "\nAdds <xref href=\"Lib.AspNetCore.ServerTiming.Filters.IServerTimingMetricFilter\" data-throw-if-not-resolved=\"false\"></xref> which will remove the descriptions from all metrics unless an application is running in development environment.\n"
  example: []
  syntax:
    content: public static void RestrictDescriptionsToDevelopment(this ServerTimingOptions options, IHostEnvironment hostEnvironment)
    parameters:
    - id: options
      type: Lib.AspNetCore.ServerTiming.ServerTimingOptions
      description: The <xref href="Lib.AspNetCore.ServerTiming.ServerTimingOptions" data-throw-if-not-resolved="false"></xref> to modify.
    - id: hostEnvironment
      type: Microsoft.Extensions.Hosting.IHostEnvironment
      description: The <xref href="Microsoft.Extensions.Hosting.IHostEnvironment" data-throw-if-not-resolved="false"></xref> used to determine the hosting environment an application is running in.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub RestrictDescriptionsToDevelopment(options As ServerTimingOptions, hostEnvironment As IHostEnvironment)
  overload: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictDescriptionsToDevelopment*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToIp(Lib.AspNetCore.ServerTiming.ServerTimingOptions,IPAddress)
  commentId: M:Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToIp(Lib.AspNetCore.ServerTiming.ServerTimingOptions,IPAddress)
  id: RestrictMetricsToIp(Lib.AspNetCore.ServerTiming.ServerTimingOptions,IPAddress)
  isExtensionMethod: true
  parent: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions
  langs:
  - csharp
  - vb
  name: RestrictMetricsToIp(ServerTimingOptions, IPAddress)
  nameWithType: ServerTimingOptionsExtensions.RestrictMetricsToIp(ServerTimingOptions, IPAddress)
  fullName: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToIp(Lib.AspNetCore.ServerTiming.ServerTimingOptions, IPAddress)
  type: Method
  source:
    remote:
      path: Lib.AspNetCore.ServerTiming/ServerTimingOptionsExtensions.cs
      branch: main
      repo: https://github.com/tpeczek/Lib.AspNetCore.ServerTiming.git
    id: RestrictMetricsToIp
    path: ../Lib.AspNetCore.ServerTiming/ServerTimingOptionsExtensions.cs
    startLine: 61
  assemblies:
  - Lib.AspNetCore.ServerTiming
  namespace: Lib.AspNetCore.ServerTiming
  summary: "\nAdds <xref href=\"Lib.AspNetCore.ServerTiming.Filters.IServerTimingMetricFilter\" data-throw-if-not-resolved=\"false\"></xref> which will remove all metrics unless request comes from specific IP address.\n"
  example: []
  syntax:
    content: public static void RestrictMetricsToIp(this ServerTimingOptions options, IPAddress address)
    parameters:
    - id: options
      type: Lib.AspNetCore.ServerTiming.ServerTimingOptions
      description: The <xref href="Lib.AspNetCore.ServerTiming.ServerTimingOptions" data-throw-if-not-resolved="false"></xref> to modify.
    - id: address
      type: IPAddress
      description: The IP Address which is allowed to receive the metrics.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub RestrictMetricsToIp(options As ServerTimingOptions, address As IPAddress)
  overload: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToIp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToIp(Lib.AspNetCore.ServerTiming.ServerTimingOptions,System.String)
  commentId: M:Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToIp(Lib.AspNetCore.ServerTiming.ServerTimingOptions,System.String)
  id: RestrictMetricsToIp(Lib.AspNetCore.ServerTiming.ServerTimingOptions,System.String)
  isExtensionMethod: true
  parent: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions
  langs:
  - csharp
  - vb
  name: RestrictMetricsToIp(ServerTimingOptions, String)
  nameWithType: ServerTimingOptionsExtensions.RestrictMetricsToIp(ServerTimingOptions, String)
  fullName: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToIp(Lib.AspNetCore.ServerTiming.ServerTimingOptions, System.String)
  type: Method
  source:
    remote:
      path: Lib.AspNetCore.ServerTiming/ServerTimingOptionsExtensions.cs
      branch: main
      repo: https://github.com/tpeczek/Lib.AspNetCore.ServerTiming.git
    id: RestrictMetricsToIp
    path: ../Lib.AspNetCore.ServerTiming/ServerTimingOptionsExtensions.cs
    startLine: 68
  assemblies:
  - Lib.AspNetCore.ServerTiming
  namespace: Lib.AspNetCore.ServerTiming
  summary: "\nAdds <xref href=\"Lib.AspNetCore.ServerTiming.Filters.IServerTimingMetricFilter\" data-throw-if-not-resolved=\"false\"></xref> which will remove all metrics unless request comes from specific IP address.\n"
  example: []
  syntax:
    content: public static void RestrictMetricsToIp(this ServerTimingOptions options, string address)
    parameters:
    - id: options
      type: Lib.AspNetCore.ServerTiming.ServerTimingOptions
      description: The <xref href="Lib.AspNetCore.ServerTiming.ServerTimingOptions" data-throw-if-not-resolved="false"></xref> to modify.
    - id: address
      type: System.String
      description: The IP Address which is allowed to receive the metrics.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub RestrictMetricsToIp(options As ServerTimingOptions, address As String)
  overload: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToIp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToIpRange(Lib.AspNetCore.ServerTiming.ServerTimingOptions,System.String,System.String)
  commentId: M:Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToIpRange(Lib.AspNetCore.ServerTiming.ServerTimingOptions,System.String,System.String)
  id: RestrictMetricsToIpRange(Lib.AspNetCore.ServerTiming.ServerTimingOptions,System.String,System.String)
  isExtensionMethod: true
  parent: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions
  langs:
  - csharp
  - vb
  name: RestrictMetricsToIpRange(ServerTimingOptions, String, String)
  nameWithType: ServerTimingOptionsExtensions.RestrictMetricsToIpRange(ServerTimingOptions, String, String)
  fullName: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToIpRange(Lib.AspNetCore.ServerTiming.ServerTimingOptions, System.String, System.String)
  type: Method
  source:
    remote:
      path: Lib.AspNetCore.ServerTiming/ServerTimingOptionsExtensions.cs
      branch: main
      repo: https://github.com/tpeczek/Lib.AspNetCore.ServerTiming.git
    id: RestrictMetricsToIpRange
    path: ../Lib.AspNetCore.ServerTiming/ServerTimingOptionsExtensions.cs
    startLine: 76
  assemblies:
  - Lib.AspNetCore.ServerTiming
  namespace: Lib.AspNetCore.ServerTiming
  summary: "\nAdds <xref href=\"Lib.AspNetCore.ServerTiming.Filters.IServerTimingMetricFilter\" data-throw-if-not-resolved=\"false\"></xref> which will remove all metrics unless request comes from IP address which falls within the specified range.\n"
  example: []
  syntax:
    content: public static void RestrictMetricsToIpRange(this ServerTimingOptions options, string lowerInclusive, string upperInclusive)
    parameters:
    - id: options
      type: Lib.AspNetCore.ServerTiming.ServerTimingOptions
      description: The <xref href="Lib.AspNetCore.ServerTiming.ServerTimingOptions" data-throw-if-not-resolved="false"></xref> to modify.
    - id: lowerInclusive
      type: System.String
      description: The lower (inclusive) bound of the IP addresses range.
    - id: upperInclusive
      type: System.String
      description: The upper (inclusive) bound of the IP addresses range.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub RestrictMetricsToIpRange(options As ServerTimingOptions, lowerInclusive As String, upperInclusive As String)
  overload: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToIpRange*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToIpRange(Lib.AspNetCore.ServerTiming.ServerTimingOptions,IPAddress,IPAddress)
  commentId: M:Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToIpRange(Lib.AspNetCore.ServerTiming.ServerTimingOptions,IPAddress,IPAddress)
  id: RestrictMetricsToIpRange(Lib.AspNetCore.ServerTiming.ServerTimingOptions,IPAddress,IPAddress)
  isExtensionMethod: true
  parent: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions
  langs:
  - csharp
  - vb
  name: RestrictMetricsToIpRange(ServerTimingOptions, IPAddress, IPAddress)
  nameWithType: ServerTimingOptionsExtensions.RestrictMetricsToIpRange(ServerTimingOptions, IPAddress, IPAddress)
  fullName: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToIpRange(Lib.AspNetCore.ServerTiming.ServerTimingOptions, IPAddress, IPAddress)
  type: Method
  source:
    remote:
      path: Lib.AspNetCore.ServerTiming/ServerTimingOptionsExtensions.cs
      branch: main
      repo: https://github.com/tpeczek/Lib.AspNetCore.ServerTiming.git
    id: RestrictMetricsToIpRange
    path: ../Lib.AspNetCore.ServerTiming/ServerTimingOptionsExtensions.cs
    startLine: 84
  assemblies:
  - Lib.AspNetCore.ServerTiming
  namespace: Lib.AspNetCore.ServerTiming
  summary: "\nAdds <xref href=\"Lib.AspNetCore.ServerTiming.Filters.IServerTimingMetricFilter\" data-throw-if-not-resolved=\"false\"></xref> which will remove all metrics unless request comes from IP address which falls within the specified range.\n"
  example: []
  syntax:
    content: public static void RestrictMetricsToIpRange(this ServerTimingOptions options, IPAddress lowerInclusive, IPAddress upperInclusive)
    parameters:
    - id: options
      type: Lib.AspNetCore.ServerTiming.ServerTimingOptions
      description: The <xref href="Lib.AspNetCore.ServerTiming.ServerTimingOptions" data-throw-if-not-resolved="false"></xref> to modify.
    - id: lowerInclusive
      type: IPAddress
      description: The lower (inclusive) bound of the IP addresses range.
    - id: upperInclusive
      type: IPAddress
      description: The upper (inclusive) bound of the IP addresses range.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub RestrictMetricsToIpRange(options As ServerTimingOptions, lowerInclusive As IPAddress, upperInclusive As IPAddress)
  overload: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToIpRange*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.AddCustomMetricFilter(Lib.AspNetCore.ServerTiming.ServerTimingOptions,Func{HttpContext,ICollection{Lib.AspNetCore.ServerTiming.Http.Headers.ServerTimingMetric},System.Boolean})
  commentId: M:Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.AddCustomMetricFilter(Lib.AspNetCore.ServerTiming.ServerTimingOptions,Func{HttpContext,ICollection{Lib.AspNetCore.ServerTiming.Http.Headers.ServerTimingMetric},System.Boolean})
  id: AddCustomMetricFilter(Lib.AspNetCore.ServerTiming.ServerTimingOptions,Func{HttpContext,ICollection{Lib.AspNetCore.ServerTiming.Http.Headers.ServerTimingMetric},System.Boolean})
  isExtensionMethod: true
  parent: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions
  langs:
  - csharp
  - vb
  name: AddCustomMetricFilter(ServerTimingOptions, Func<HttpContext, ICollection<ServerTimingMetric>, Boolean>)
  nameWithType: ServerTimingOptionsExtensions.AddCustomMetricFilter(ServerTimingOptions, Func<HttpContext, ICollection<ServerTimingMetric>, Boolean>)
  fullName: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.AddCustomMetricFilter(Lib.AspNetCore.ServerTiming.ServerTimingOptions, Func<HttpContext, ICollection<Lib.AspNetCore.ServerTiming.Http.Headers.ServerTimingMetric>, System.Boolean>)
  type: Method
  source:
    remote:
      path: Lib.AspNetCore.ServerTiming/ServerTimingOptionsExtensions.cs
      branch: main
      repo: https://github.com/tpeczek/Lib.AspNetCore.ServerTiming.git
    id: AddCustomMetricFilter
    path: ../Lib.AspNetCore.ServerTiming/ServerTimingOptionsExtensions.cs
    startLine: 91
  assemblies:
  - Lib.AspNetCore.ServerTiming
  namespace: Lib.AspNetCore.ServerTiming
  summary: "\nAdds a custom <xref href=\"Lib.AspNetCore.ServerTiming.Filters.IServerTimingMetricFilter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void AddCustomMetricFilter(this ServerTimingOptions options, Func<HttpContext, ICollection<ServerTimingMetric>, bool> filter)
    parameters:
    - id: options
      type: Lib.AspNetCore.ServerTiming.ServerTimingOptions
      description: The <xref href="Lib.AspNetCore.ServerTiming.ServerTimingOptions" data-throw-if-not-resolved="false"></xref> to modify.
    - id: filter
      type: Func{HttpContext,ICollection{Lib.AspNetCore.ServerTiming.Http.Headers.ServerTimingMetric},System.Boolean}
      description: The function used for inspecting and modifying the collection of metrics.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub AddCustomMetricFilter(options As ServerTimingOptions, filter As Func(Of HttpContext, ICollection(Of ServerTimingMetric), Boolean))
  overload: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.AddCustomMetricFilter*
  nameWithType.vb: ServerTimingOptionsExtensions.AddCustomMetricFilter(ServerTimingOptions, Func(Of HttpContext, ICollection(Of ServerTimingMetric), Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.AddCustomMetricFilter(Lib.AspNetCore.ServerTiming.ServerTimingOptions, Func(Of HttpContext, ICollection(Of Lib.AspNetCore.ServerTiming.Http.Headers.ServerTimingMetric), System.Boolean))
  name.vb: AddCustomMetricFilter(ServerTimingOptions, Func(Of HttpContext, ICollection(Of ServerTimingMetric), Boolean))
references:
- uid: Lib.AspNetCore.ServerTiming.ServerTimingOptions
  commentId: T:Lib.AspNetCore.ServerTiming.ServerTimingOptions
  parent: Lib.AspNetCore.ServerTiming
  name: ServerTimingOptions
  nameWithType: ServerTimingOptions
  fullName: Lib.AspNetCore.ServerTiming.ServerTimingOptions
- uid: Lib.AspNetCore.ServerTiming.Filters.IServerTimingMetricFilter
  commentId: T:Lib.AspNetCore.ServerTiming.Filters.IServerTimingMetricFilter
  parent: Lib.AspNetCore.ServerTiming.Filters
  name: IServerTimingMetricFilter
  nameWithType: IServerTimingMetricFilter
  fullName: Lib.AspNetCore.ServerTiming.Filters.IServerTimingMetricFilter
- uid: Lib.AspNetCore.ServerTiming
  commentId: N:Lib.AspNetCore.ServerTiming
  name: Lib.AspNetCore.ServerTiming
  nameWithType: Lib.AspNetCore.ServerTiming
  fullName: Lib.AspNetCore.ServerTiming
- uid: Lib.AspNetCore.ServerTiming.Filters
  commentId: N:Lib.AspNetCore.ServerTiming.Filters
  name: Lib.AspNetCore.ServerTiming.Filters
  nameWithType: Lib.AspNetCore.ServerTiming.Filters
  fullName: Lib.AspNetCore.ServerTiming.Filters
- uid: Microsoft.Extensions.Hosting.IHostEnvironment
  commentId: T:Microsoft.Extensions.Hosting.IHostEnvironment
  parent: Microsoft.Extensions.Hosting
  isExternal: true
  name: IHostEnvironment
  nameWithType: IHostEnvironment
  fullName: Microsoft.Extensions.Hosting.IHostEnvironment
- uid: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToDevelopment*
  commentId: Overload:Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToDevelopment
  name: RestrictMetricsToDevelopment
  nameWithType: ServerTimingOptionsExtensions.RestrictMetricsToDevelopment
  fullName: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToDevelopment
- uid: Microsoft.Extensions.Hosting
  commentId: N:Microsoft.Extensions.Hosting
  isExternal: true
  name: Microsoft.Extensions.Hosting
  nameWithType: Microsoft.Extensions.Hosting
  fullName: Microsoft.Extensions.Hosting
- uid: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictDescriptionsToDevelopment*
  commentId: Overload:Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictDescriptionsToDevelopment
  name: RestrictDescriptionsToDevelopment
  nameWithType: ServerTimingOptionsExtensions.RestrictDescriptionsToDevelopment
  fullName: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictDescriptionsToDevelopment
- uid: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToIp*
  commentId: Overload:Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToIp
  name: RestrictMetricsToIp
  nameWithType: ServerTimingOptionsExtensions.RestrictMetricsToIp
  fullName: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToIp
- uid: IPAddress
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: IPAddress
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToIpRange*
  commentId: Overload:Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToIpRange
  name: RestrictMetricsToIpRange
  nameWithType: ServerTimingOptionsExtensions.RestrictMetricsToIpRange
  fullName: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.RestrictMetricsToIpRange
- uid: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.AddCustomMetricFilter*
  commentId: Overload:Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.AddCustomMetricFilter
  name: AddCustomMetricFilter
  nameWithType: ServerTimingOptionsExtensions.AddCustomMetricFilter
  fullName: Lib.AspNetCore.ServerTiming.ServerTimingOptionsExtensions.AddCustomMetricFilter
- uid: Func{HttpContext,ICollection{Lib.AspNetCore.ServerTiming.Http.Headers.ServerTimingMetric},System.Boolean}
  commentId: '!:Func{HttpContext,ICollection{Lib.AspNetCore.ServerTiming.Http.Headers.ServerTimingMetric},System.Boolean}'
  definition: Func`3
  name: Func<HttpContext, ICollection<ServerTimingMetric>, Boolean>
  nameWithType: Func<HttpContext, ICollection<ServerTimingMetric>, Boolean>
  fullName: Func<HttpContext, ICollection<Lib.AspNetCore.ServerTiming.Http.Headers.ServerTimingMetric>, System.Boolean>
  nameWithType.vb: Func(Of HttpContext, ICollection(Of ServerTimingMetric), Boolean)
  fullName.vb: Func(Of HttpContext, ICollection(Of Lib.AspNetCore.ServerTiming.Http.Headers.ServerTimingMetric), System.Boolean)
  name.vb: Func(Of HttpContext, ICollection(Of ServerTimingMetric), Boolean)
  spec.csharp:
  - uid: Func`3
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: HttpContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Lib.AspNetCore.ServerTiming.Http.Headers.ServerTimingMetric
    name: ServerTimingMetric
    nameWithType: ServerTimingMetric
    fullName: Lib.AspNetCore.ServerTiming.Http.Headers.ServerTimingMetric
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`3
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: HttpContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Lib.AspNetCore.ServerTiming.Http.Headers.ServerTimingMetric
    name: ServerTimingMetric
    nameWithType: ServerTimingMetric
    fullName: Lib.AspNetCore.ServerTiming.Http.Headers.ServerTimingMetric
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Func`3
  isExternal: true
  name: Func<, , >
  nameWithType: Func<, , >
  fullName: Func<, , >
  nameWithType.vb: Func(Of , , )
  fullName.vb: Func(Of , , )
  name.vb: Func(Of , , )
  spec.csharp:
  - uid: Func`3
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`3
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
